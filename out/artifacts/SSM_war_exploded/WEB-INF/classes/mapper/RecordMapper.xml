<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.RecordMapper">
    <resultMap id="BaseResultMap" type="entity.Record">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="memberId" property="memberid" jdbcType="INTEGER"/>
        <result column="pay" property="pay" jdbcType="INTEGER"/>
        <result column="balance" property="balance" jdbcType="INTEGER"/>
        <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
        <result column="time" property="time" jdbcType="DATE"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, memberId, pay, balance, remarks,time
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="entity.RecordExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="getByMember" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from record
        <where>
            <if test="msgs!=null">
                memberid= #{msgs}
            </if>
        </where>
        order by id limit #{pages.dbIndex},#{pages.dbNumber}
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from record
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from record
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="entity.RecordExample">
        delete from record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="entity.Record">
    insert into record (id, memberId, pay, 
      balance, remarks,time)
    values (#{id,jdbcType=INTEGER}, #{memberid,jdbcType=INTEGER}, #{pay,jdbcType=INTEGER}, 
      #{balance,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR},#{time,jdbcType=DATE})
  </insert>
    <insert id="insertSelective" parameterType="entity.Record">
        insert into record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="memberid != null">
                memberId,
            </if>
            <if test="pay != null">
                pay,
            </if>
            <if test="balance != null">
                balance,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="memberid != null">
                #{memberid,jdbcType=INTEGER},
            </if>
            <if test="pay != null">
                #{pay,jdbcType=INTEGER},
            </if>
            <if test="balance != null">
                #{balance,jdbcType=INTEGER},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="entity.RecordExample" resultType="java.lang.Integer">
        select count(*) from record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <select id="countByMember" parameterType="entity.Member" resultType="java.lang.Integer">
        select count(*) from record
        <where>
            memberid = #{Member.id}
        </where>
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        update record
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.memberid != null">
                memberId = #{record.memberid,jdbcType=INTEGER},
            </if>
            <if test="record.pay != null">
                pay = #{record.pay,jdbcType=INTEGER},
            </if>
            <if test="record.balance != null">
                balance = #{record.balance,jdbcType=INTEGER},
            </if>
            <if test="record.remarks != null">
                remarks = #{record.remarks,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update record
        set id = #{record.id,jdbcType=INTEGER},
        memberId = #{record.memberid,jdbcType=INTEGER},
        pay = #{record.pay,jdbcType=INTEGER},
        balance = #{record.balance,jdbcType=INTEGER},
        remarks = #{record.remarks,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="entity.Record">
        update record
        <set>
            <if test="memberid != null">
                memberId = #{memberid,jdbcType=INTEGER},
            </if>
            <if test="pay != null">
                pay = #{pay,jdbcType=INTEGER},
            </if>
            <if test="balance != null">
                balance = #{balance,jdbcType=INTEGER},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="entity.Record">
    update record
    set memberId = #{memberid,jdbcType=INTEGER},
      pay = #{pay,jdbcType=INTEGER},
      balance = #{balance,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>