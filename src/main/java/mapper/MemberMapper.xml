<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.MemberMapper">
  <resultMap id="BaseResultMap" type="entity.Member">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="memberName" jdbcType="VARCHAR" property="membername" />
    <result column="phoneNumber" jdbcType="INTEGER" property="phonenumber" />
    <result column="memberNumber" jdbcType="VARCHAR" property="membernumber" />
    <result column="consumptionSum" jdbcType="INTEGER" property="consumptionsum" />
    <result column="balance" jdbcType="INTEGER" property="balance" />
    <result column="registDate" jdbcType="TIMESTAMP" property="registdate" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birthDate" jdbcType="TIMESTAMP" property="birthdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach  collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, memberName, phoneNumber, memberNumber, consumptionSum, balance, registDate, remarks, 
    sex, birthDate
  </sql>
  <select id="selectByExample" parameterType="entity.MemberExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="entity.MemberExample">
    delete from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.Member">
    insert into member (id, memberName, phoneNumber, 
      memberNumber, consumptionSum, balance, 
      registDate, remarks, sex, 
      birthDate)
    values (#{id,jdbcType=INTEGER}, #{membername,jdbcType=VARCHAR}, #{phonenumber,jdbcType=INTEGER}, 
      #{membernumber,jdbcType=VARCHAR}, #{consumptionsum,jdbcType=INTEGER}, #{balance,jdbcType=INTEGER}, 
      #{registdate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{birthdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="entity.Member">
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="membername != null">
        memberName,
      </if>
      <if test="phonenumber != null">
        phoneNumber,
      </if>
      <if test="membernumber != null">
        memberNumber,
      </if>
      <if test="consumptionsum != null">
        consumptionSum,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="registdate != null">
        registDate,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthdate != null">
        birthDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="membername != null">
        #{membername,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        #{phonenumber,jdbcType=INTEGER},
      </if>
      <if test="membernumber != null">
        #{membernumber,jdbcType=VARCHAR},
      </if>
      <if test="consumptionsum != null">
        #{consumptionsum,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=INTEGER},
      </if>
      <if test="registdate != null">
        #{registdate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthdate != null">
        #{birthdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.MemberExample" resultType="java.lang.Integer">
    select count(*) from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update member
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.membername != null">
        memberName = #{record.membername,jdbcType=VARCHAR},
      </if>
      <if test="record.phonenumber != null">
        phoneNumber = #{record.phonenumber,jdbcType=INTEGER},
      </if>
      <if test="record.membernumber != null">
        memberNumber = #{record.membernumber,jdbcType=VARCHAR},
      </if>
      <if test="record.consumptionsum != null">
        consumptionSum = #{record.consumptionsum,jdbcType=INTEGER},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=INTEGER},
      </if>
      <if test="record.registdate != null">
        registDate = #{record.registdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.birthdate != null">
        birthDate = #{record.birthdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update member
    set id = #{record.id,jdbcType=INTEGER},
      memberName = #{record.membername,jdbcType=VARCHAR},
      phoneNumber = #{record.phonenumber,jdbcType=INTEGER},
      memberNumber = #{record.membernumber,jdbcType=VARCHAR},
      consumptionSum = #{record.consumptionsum,jdbcType=INTEGER},
      balance = #{record.balance,jdbcType=INTEGER},
      registDate = #{record.registdate,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      birthDate = #{record.birthdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Member">
    update member
    <set>
      <if test="membername != null">
        memberName = #{membername,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        phoneNumber = #{phonenumber,jdbcType=INTEGER},
      </if>
      <if test="membernumber != null">
        memberNumber = #{membernumber,jdbcType=VARCHAR},
      </if>
      <if test="consumptionsum != null">
        consumptionSum = #{consumptionsum,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=INTEGER},
      </if>
      <if test="registdate != null">
        registDate = #{registdate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthdate != null">
        birthDate = #{birthdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Member">
    update member
    set memberName = #{membername,jdbcType=VARCHAR},
      phoneNumber = #{phonenumber,jdbcType=INTEGER},
      memberNumber = #{membernumber,jdbcType=VARCHAR},
      consumptionSum = #{consumptionsum,jdbcType=INTEGER},
      balance = #{balance,jdbcType=INTEGER},
      registDate = #{registdate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthDate = #{birthdate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="entity.Member">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="memberName" jdbcType="VARCHAR" property="membername" />
    <result column="phoneNumber" jdbcType="INTEGER" property="phonenumber" />
    <result column="memberNumber" jdbcType="VARCHAR" property="membernumber" />
    <result column="consumptionSum" jdbcType="INTEGER" property="consumptionsum" />
    <result column="balance" jdbcType="INTEGER" property="balance" />
    <result column="registDate" jdbcType="TIMESTAMP" property="registdate" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birthDate" jdbcType="TIMESTAMP" property="birthdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, memberName, phoneNumber, memberNumber, consumptionSum, balance, registDate, remarks, 
    sex, birthDate
  </sql>
  <select id="selectByExample" parameterType="entity.MemberExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="entity.MemberExample">
    delete from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.Member">
    insert into member (id, memberName, phoneNumber, 
      memberNumber, consumptionSum, balance, 
      registDate, remarks, sex, 
      birthDate)
    values (#{id,jdbcType=INTEGER}, #{membername,jdbcType=VARCHAR}, #{phonenumber,jdbcType=INTEGER}, 
      #{membernumber,jdbcType=VARCHAR}, #{consumptionsum,jdbcType=INTEGER}, #{balance,jdbcType=INTEGER}, 
      #{registdate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{birthdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="entity.Member">
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="membername != null">
        memberName,
      </if>
      <if test="phonenumber != null">
        phoneNumber,
      </if>
      <if test="membernumber != null">
        memberNumber,
      </if>
      <if test="consumptionsum != null">
        consumptionSum,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="registdate != null">
        registDate,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthdate != null">
        birthDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="membername != null">
        #{membername,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        #{phonenumber,jdbcType=INTEGER},
      </if>
      <if test="membernumber != null">
        #{membernumber,jdbcType=VARCHAR},
      </if>
      <if test="consumptionsum != null">
        #{consumptionsum,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=INTEGER},
      </if>
      <if test="registdate != null">
        #{registdate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthdate != null">
        #{birthdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.MemberExample" resultType="java.lang.Integer">
    select count(*) from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update member
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.membername != null">
        memberName = #{record.membername,jdbcType=VARCHAR},
      </if>
      <if test="record.phonenumber != null">
        phoneNumber = #{record.phonenumber,jdbcType=INTEGER},
      </if>
      <if test="record.membernumber != null">
        memberNumber = #{record.membernumber,jdbcType=VARCHAR},
      </if>
      <if test="record.consumptionsum != null">
        consumptionSum = #{record.consumptionsum,jdbcType=INTEGER},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=INTEGER},
      </if>
      <if test="record.registdate != null">
        registDate = #{record.registdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.birthdate != null">
        birthDate = #{record.birthdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update member
    set id = #{record.id,jdbcType=INTEGER},
      memberName = #{record.membername,jdbcType=VARCHAR},
      phoneNumber = #{record.phonenumber,jdbcType=INTEGER},
      memberNumber = #{record.membernumber,jdbcType=VARCHAR},
      consumptionSum = #{record.consumptionsum,jdbcType=INTEGER},
      balance = #{record.balance,jdbcType=INTEGER},
      registDate = #{record.registdate,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      birthDate = #{record.birthdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Member">
    update member
    <set>
      <if test="membername != null">
        memberName = #{membername,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        phoneNumber = #{phonenumber,jdbcType=INTEGER},
      </if>
      <if test="membernumber != null">
        memberNumber = #{membernumber,jdbcType=VARCHAR},
      </if>
      <if test="consumptionsum != null">
        consumptionSum = #{consumptionsum,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=INTEGER},
      </if>
      <if test="registdate != null">
        registDate = #{registdate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthdate != null">
        birthDate = #{birthdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Member">
    update member
    set memberName = #{membername,jdbcType=VARCHAR},
      phoneNumber = #{phonenumber,jdbcType=INTEGER},
      memberNumber = #{membernumber,jdbcType=VARCHAR},
      consumptionSum = #{consumptionsum,jdbcType=INTEGER},
      balance = #{balance,jdbcType=INTEGER},
      registDate = #{registdate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthDate = #{birthdate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="entity.Member">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="memberName" jdbcType="VARCHAR" property="membername" />
    <result column="phoneNumber" jdbcType="INTEGER" property="phonenumber" />
    <result column="memberNumber" jdbcType="INTEGER" property="membernumber" />
    <result column="consumptionSum" jdbcType="INTEGER" property="consumptionsum" />
    <result column="balance" jdbcType="INTEGER" property="balance" />
    <result column="registDate" jdbcType="TIMESTAMP" property="registdate" />
    <result column="Remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, memberName, phoneNumber, memberNumber, consumptionSum, balance, registDate, Remarks
  </sql>
  <select id="selectByExample" parameterType="entity.MemberExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="entity.MemberExample">
    delete from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.Member">
    insert into member (id, memberName, phoneNumber, 
      memberNumber, consumptionSum, balance, 
      registDate, Remarks)
    values (#{id,jdbcType=INTEGER}, #{membername,jdbcType=VARCHAR}, #{phonenumber,jdbcType=INTEGER}, 
      #{membernumber,jdbcType=INTEGER}, #{consumptionsum,jdbcType=INTEGER}, #{balance,jdbcType=INTEGER}, 
      #{registdate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="entity.Member">
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="membername != null">
        memberName,
      </if>
      <if test="phonenumber != null">
        phoneNumber,
      </if>
      <if test="membernumber != null">
        memberNumber,
      </if>
      <if test="consumptionsum != null">
        consumptionSum,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="registdate != null">
        registDate,
      </if>
      <if test="remarks != null">
        Remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="membername != null">
        #{membername,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        #{phonenumber,jdbcType=INTEGER},
      </if>
      <if test="membernumber != null">
        #{membernumber,jdbcType=INTEGER},
      </if>
      <if test="consumptionsum != null">
        #{consumptionsum,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=INTEGER},
      </if>
      <if test="registdate != null">
        #{registdate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.MemberExample" resultType="java.lang.Integer">
    select count(*) from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update member
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.membername != null">
        memberName = #{record.membername,jdbcType=VARCHAR},
      </if>
      <if test="record.phonenumber != null">
        phoneNumber = #{record.phonenumber,jdbcType=INTEGER},
      </if>
      <if test="record.membernumber != null">
        memberNumber = #{record.membernumber,jdbcType=INTEGER},
      </if>
      <if test="record.consumptionsum != null">
        consumptionSum = #{record.consumptionsum,jdbcType=INTEGER},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=INTEGER},
      </if>
      <if test="record.registdate != null">
        registDate = #{record.registdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null">
        Remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update member
    set id = #{record.id,jdbcType=INTEGER},
      memberName = #{record.membername,jdbcType=VARCHAR},
      phoneNumber = #{record.phonenumber,jdbcType=INTEGER},
      memberNumber = #{record.membernumber,jdbcType=INTEGER},
      consumptionSum = #{record.consumptionsum,jdbcType=INTEGER},
      balance = #{record.balance,jdbcType=INTEGER},
      registDate = #{record.registdate,jdbcType=TIMESTAMP},
      Remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Member">
    update member
    <set>
      <if test="membername != null">
        memberName = #{membername,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        phoneNumber = #{phonenumber,jdbcType=INTEGER},
      </if>
      <if test="membernumber != null">
        memberNumber = #{membernumber,jdbcType=INTEGER},
      </if>
      <if test="consumptionsum != null">
        consumptionSum = #{consumptionsum,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=INTEGER},
      </if>
      <if test="registdate != null">
        registDate = #{registdate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        Remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Member">
    update member
    set memberName = #{membername,jdbcType=VARCHAR},
      phoneNumber = #{phonenumber,jdbcType=INTEGER},
      memberNumber = #{membernumber,jdbcType=INTEGER},
      consumptionSum = #{consumptionsum,jdbcType=INTEGER},
      balance = #{balance,jdbcType=INTEGER},
      registDate = #{registdate,jdbcType=TIMESTAMP},
      Remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>